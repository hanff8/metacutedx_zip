name: Auto Merge and Release

on:
  schedule:
    - cron: '0 * * * *' # 每小时运行一次，可以根据需要调整

jobs:
  detect-upstream-updates:
    runs-on: ubuntu-latest
    outputs:
      pr-created: ${{ steps.create-pr.outputs.pr_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Add upstream remote
        run: git remote add upstream https://github.com/MetaCubeX/metacubexd.git
        # 确保替换 <UPSTREAM_REPO_URL> 为上游仓库的URL

      - name: Fetch upstream
        run: git fetch upstream

      - name: Check for changes
        id: check-changes
        run: |
          git checkout main
          git pull origin main
          git diff --quiet main upstream/main || echo "changes detected"

      - name: Create PR if changes detected
        id: create-pr
        uses: peter-evans/create-pull-request@v5
        if: steps.check-changes.outputs.changes == 'changes detected'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: merge upstream changes'
          title: 'Merge upstream changes'
          body: 'Automated PR to merge upstream changes'
          branch: 'merge-upstream-changes'
          labels: 'automated pr'
          base: 'main'

  auto-merge-pr:
    runs-on: ubuntu-latest
    needs: detect-upstream-updates
    if: ${{ needs.detect-upstream-updates.outputs.pr-created }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Merge PR
        uses: actions/github-script@v6
        with:
          script: |
            const pr_url = '${{ needs.detect-upstream-updates.outputs.pr-created }}';
            const pr_number = pr_url.split('/').pop();
            const { data: pr } = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr_number,
            });

            if (pr.state === 'open') {
              await github.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr_number,
                merge_method: 'merge',
              });
            }

  release:
    runs-on: ubuntu-latest
    needs: auto-merge-pr
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Bump version and create tag
        id: version
        run: |
          NEW_TAG=$(npm version patch -m "chore: release %s")
          echo "::set-output name=tag::$NEW_TAG"

      - name: Push changes
        run: |
          git push origin main --follow-tags

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/**
          tag_name: ${{ steps.version.outputs.tag }}
          name: Release ${{ steps.version.outputs.tag }}
          body: Automated release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Check for new releases and convert tgz to zip

on:
  schedule:
    - cron: '0 * * * *' # 每小时检查一次，可以根据需要调整
  workflow_dispatch:

jobs:
  check-and-convert:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Check for latest release
        id: check_release
        uses: actions/github-script@v6
        with:
          script: |
            const { data: latestRelease } = await github.rest.repos.getLatestRelease({
              owner: 'MetaCubeX',
              repo: 'metacubexd'
            });
            console.log('Latest Release:', latestRelease);
            return latestRelease;

      - name: Set latest release id
        run: echo "LATEST_RELEASE_ID=${{ steps.check_release.outputs.id }}" >> $GITHUB_ENV

      - name: Check if new release
        id: check_new_release
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            let lastCheckedReleaseId = '0';
            try {
              const secret = await github.actions.getRepoSecret({
                owner,
                repo,
                secret_name: 'LAST_RELEASE_ID'
              });
              lastCheckedReleaseId = secret.secret;
            } catch (e) {
              console.log('No previous release ID found');
            }
            const latestReleaseId = process.env.LATEST_RELEASE_ID;
            console.log('Last checked release ID:', lastCheckedReleaseId);
            console.log('Latest release ID:', latestReleaseId);
            return lastCheckedReleaseId !== latestReleaseId;

      - name: Download tgz file
        if: steps.check_new_release.outputs.result == 'true'
        id: download-tgz
        uses: actions/github-script@v6
        with:
          script: |
            const assets = ${{ steps.check_release.outputs.assets }};
            const tgzAsset = assets.find(asset => asset.name.endsWith('.tgz'));
            if (!tgzAsset) {
              throw new Error('No tgz asset found in the latest release');
            }
            console.log('TGZ Asset URL:', tgzAsset.browser_download_url);
            return tgzAsset.browser_download_url;

      - name: Download the tgz file
        if: steps.check_new_release.outputs.result == 'true'
        run: curl -L ${{ steps.download-tgz.outputs.result }} -o release.tgz

      - name: Extract tgz file
        if: steps.check_new_release.outputs.result == 'true'
        run: tar -xzf release.tgz

      - name: Compress to zip
        if: steps.check_new_release.outputs.result == 'true'
        run: zip -r release.zip *

      - name: Create GitHub release
        if: steps.check_new_release.outputs.result == 'true'
        uses: softprops/action-gh-release@v2
        with:
          files: release.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update last release id
        if: steps.check_new_release.outputs.result == 'true'
        run: |
          echo $LATEST_RELEASE_ID > LAST_RELEASE_ID
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
